// Code generated by MockGen. DO NOT EDIT.
// Source: usecase.go

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	models "github.com/ductong169z/shorten-url/internal/models"
	gomock "github.com/golang/mock/gomock"
)

// MockUseCase is a mock of UseCase interface.
type MockUseCase struct {
	ctrl     *gomock.Controller
	recorder *MockUseCaseMockRecorder
}

// MockUseCaseMockRecorder is the mock recorder for MockUseCase.
type MockUseCaseMockRecorder struct {
	mock *MockUseCase
}

// NewMockUseCase creates a new mock instance.
func NewMockUseCase(ctrl *gomock.Controller) *MockUseCase {
	mock := &MockUseCase{ctrl: ctrl}
	mock.recorder = &MockUseCaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUseCase) EXPECT() *MockUseCaseMockRecorder {
	return m.recorder
}

// ResolveShortCode mocks base method.
func (m *MockUseCase) ResolveShortCode(ctx context.Context, code string) (*models.ShortURL, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ResolveShortCode", ctx, code)
	ret0, _ := ret[0].(*models.ShortURL)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ResolveShortCode indicates an expected call of ResolveShortCode.
func (mr *MockUseCaseMockRecorder) ResolveShortCode(ctx, code interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ResolveShortCode", reflect.TypeOf((*MockUseCase)(nil).ResolveShortCode), ctx, code)
}

// ShortenURL mocks base method.
func (m *MockUseCase) ShortenURL(ctx context.Context, shortURL *models.ShortURL) (*models.ShortURL, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ShortenURL", ctx, shortURL)
	ret0, _ := ret[0].(*models.ShortURL)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ShortenURL indicates an expected call of ShortenURL.
func (mr *MockUseCaseMockRecorder) ShortenURL(ctx, shortURL interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ShortenURL", reflect.TypeOf((*MockUseCase)(nil).ShortenURL), ctx, shortURL)
}
